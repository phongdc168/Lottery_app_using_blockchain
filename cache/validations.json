{
  "version": "3.2",
  "log": [
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b4cd76c46f252229667db54d569be91a1aadff5dde4c2878439b80406b3842ac",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Lottery": {
        "src": "contracts/Lottery.sol:13",
        "version": {
          "withMetadata": "2107aa09a15cc4dee109dfa2955393438bccc919aad278f94786066dcc0d6c1f",
          "withoutMetadata": "3551b7251105dd59d65e943ec12ae76413c398ea276301dadcff182b70c0c8a9",
          "linkedWithoutMetadata": "3551b7251105dd59d65e943ec12ae76413c398ea276301dadcff182b70c0c8a9"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setStartAt(uint256)",
          "setEndAt(uint256)",
          "setCostTicket(uint256)",
          "getBalance()",
          "getPlayers(uint256)",
          "getAmountPlayer()",
          "enter(uint256)",
          "_requestRandomWords()",
          "getAmountWinner()",
          "getListWinner(uint256)",
          "getLuckyNumber()",
          "_reset()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Lottery",
            "src": "contracts/Lottery.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/Lottery.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/Lottery.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/Lottery.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "playerCount",
            "src": "contracts/Lottery.sol:58"
          },
          {
            "kind": "state-variable-assignment",
            "name": "costTicket",
            "src": "contracts/Lottery.sol:62"
          },
          {
            "kind": "state-variable-assignment",
            "name": "startAt",
            "src": "contracts/Lottery.sol:63"
          },
          {
            "kind": "state-variable-assignment",
            "name": "endAt",
            "src": "contracts/Lottery.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MyToken)1257",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:17"
            },
            {
              "label": "callbackGasLimit",
              "offset": 20,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:33"
            },
            {
              "label": "requestConfirmations",
              "offset": 24,
              "slot": "1",
              "type": "t_uint16",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:36"
            },
            {
              "label": "numWords",
              "offset": 26,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:40"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:42"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:43"
            },
            {
              "label": "lotteryId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:45"
            },
            {
              "label": "groupTicket",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(ListNumberTicket)756_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:50"
            },
            {
              "label": "allLottery",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Participants)766_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:56"
            },
            {
              "label": "playerCount",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:58"
            },
            {
              "label": "prizePool",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:59"
            },
            {
              "label": "luckyNumber",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:60"
            },
            {
              "label": "numTicketPlayer",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:61"
            },
            {
              "label": "costTicket",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:62"
            },
            {
              "label": "startAt",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:63"
            },
            {
              "label": "endAt",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address_payable)dyn_storage": {
              "label": "address payable[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_contract(MyToken)1257": {
              "label": "contract MyToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(ListNumberTicket)756_storage)": {
              "label": "mapping(uint256 => struct Lottery.ListNumberTicket)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Participants)766_storage)": {
              "label": "mapping(uint256 => struct Lottery.Participants)",
              "numberOfBytes": "32"
            },
            "t_struct(ListNumberTicket)756_storage": {
              "label": "struct Lottery.ListNumberTicket",
              "members": [
                {
                  "label": "groupPlayer",
                  "type": "t_array(t_address_payable)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Participants)766_storage": {
              "label": "struct Lottery.Participants",
              "members": [
                {
                  "label": "player",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "numTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyToken": {
        "src": "contracts/MyToken.sol:7",
        "version": {
          "withMetadata": "e2875971304f81bc34bff85af4ab14395af6c533c62dfdc284e7012026cddb35",
          "withoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a",
          "linkedWithoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a"
        },
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setApproval(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyToken",
            "src": "contracts/MyToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts/extensions/ERC20.sol:31",
        "version": {
          "withMetadata": "4c8b67e6276bbe71c1f249cce59684cde3c6b0ff92562577d3d61de7587bcc3e",
          "withoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c",
          "linkedWithoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/extensions/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/extensions/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "contracts/utils/ReentrancyGuardUpgradable.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuardUpgradable.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/utils/ReentrancyGuardUpgradable.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b4cd76c46f252229667db54d569be91a1aadff5dde4c2878439b80406b3842ac",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Lottery": {
        "src": "contracts/Lottery.sol:13",
        "version": {
          "withMetadata": "5f2a3c932213838b01b87a6b26e7ad4a6f5a206bba2d9b05ca18e8ef5973ed64",
          "withoutMetadata": "55b37bbe8e64b9b510c2ac1e5e5d64d237d98da3f10d86025d1c248c2f0b6bdf",
          "linkedWithoutMetadata": "55b37bbe8e64b9b510c2ac1e5e5d64d237d98da3f10d86025d1c248c2f0b6bdf"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setStartAt(uint256)",
          "setEndAt(uint256)",
          "setCostTicket(uint256)",
          "getBalance()",
          "getPlayers(uint256)",
          "getAmountPlayer()",
          "enter(uint256)",
          "_requestRandomWords()",
          "getAmountWinner()",
          "getListWinner(uint256)",
          "getLuckyNumber()",
          "_reset()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Lottery",
            "src": "contracts/Lottery.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/Lottery.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/Lottery.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/Lottery.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "playerCount",
            "src": "contracts/Lottery.sol:58"
          },
          {
            "kind": "state-variable-assignment",
            "name": "costTicket",
            "src": "contracts/Lottery.sol:62"
          },
          {
            "kind": "state-variable-assignment",
            "name": "startAt",
            "src": "contracts/Lottery.sol:63"
          },
          {
            "kind": "state-variable-assignment",
            "name": "endAt",
            "src": "contracts/Lottery.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MyToken)1240",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:17"
            },
            {
              "label": "callbackGasLimit",
              "offset": 20,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:33"
            },
            {
              "label": "requestConfirmations",
              "offset": 24,
              "slot": "1",
              "type": "t_uint16",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:36"
            },
            {
              "label": "numWords",
              "offset": 26,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:40"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:42"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:43"
            },
            {
              "label": "lotteryId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:45"
            },
            {
              "label": "groupTicket",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(ListNumberTicket)756_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:50"
            },
            {
              "label": "allLottery",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Participants)766_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:56"
            },
            {
              "label": "playerCount",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:58"
            },
            {
              "label": "prizePool",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:59"
            },
            {
              "label": "luckyNumber",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:60"
            },
            {
              "label": "numTicketPlayer",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:61"
            },
            {
              "label": "costTicket",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:62"
            },
            {
              "label": "startAt",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:63"
            },
            {
              "label": "endAt",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address_payable)dyn_storage": {
              "label": "address payable[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_contract(MyToken)1240": {
              "label": "contract MyToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(ListNumberTicket)756_storage)": {
              "label": "mapping(uint256 => struct Lottery.ListNumberTicket)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Participants)766_storage)": {
              "label": "mapping(uint256 => struct Lottery.Participants)",
              "numberOfBytes": "32"
            },
            "t_struct(ListNumberTicket)756_storage": {
              "label": "struct Lottery.ListNumberTicket",
              "members": [
                {
                  "label": "groupPlayer",
                  "type": "t_array(t_address_payable)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Participants)766_storage": {
              "label": "struct Lottery.Participants",
              "members": [
                {
                  "label": "player",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "numTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyToken": {
        "src": "contracts/MyToken.sol:7",
        "version": {
          "withMetadata": "e2875971304f81bc34bff85af4ab14395af6c533c62dfdc284e7012026cddb35",
          "withoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a",
          "linkedWithoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a"
        },
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setApproval(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyToken",
            "src": "contracts/MyToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts/extensions/ERC20.sol:31",
        "version": {
          "withMetadata": "4c8b67e6276bbe71c1f249cce59684cde3c6b0ff92562577d3d61de7587bcc3e",
          "withoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c",
          "linkedWithoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/extensions/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/extensions/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "contracts/utils/ReentrancyGuardUpgradable.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuardUpgradable.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/utils/ReentrancyGuardUpgradable.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b4cd76c46f252229667db54d569be91a1aadff5dde4c2878439b80406b3842ac",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Lottery": {
        "src": "contracts/Lottery.sol:13",
        "version": {
          "withMetadata": "328c804531e3aad03ef22947024060a4935cac30e2963e8a487b0c6219510bd4",
          "withoutMetadata": "4d7e8d9bd2cb3a8eac19246c2789cdf6cfe1724991efa86fba0d229f07be3b5c",
          "linkedWithoutMetadata": "4d7e8d9bd2cb3a8eac19246c2789cdf6cfe1724991efa86fba0d229f07be3b5c"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setStartAt(uint256)",
          "setEndAt(uint256)",
          "setCostTicket(uint256)",
          "getBalance()",
          "getPlayers(uint256)",
          "getAmountPlayer()",
          "enter(uint256)",
          "_requestRandomWords()",
          "getAmountWinner()",
          "getListWinner(uint256)",
          "getLuckyNumber()",
          "_reset()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Lottery",
            "src": "contracts/Lottery.sol:21"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/Lottery.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/Lottery.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/Lottery.sol:40"
          },
          {
            "kind": "state-variable-assignment",
            "name": "playerCount",
            "src": "contracts/Lottery.sol:58"
          },
          {
            "kind": "state-variable-assignment",
            "name": "costTicket",
            "src": "contracts/Lottery.sol:62"
          },
          {
            "kind": "state-variable-assignment",
            "name": "startAt",
            "src": "contracts/Lottery.sol:63"
          },
          {
            "kind": "state-variable-assignment",
            "name": "endAt",
            "src": "contracts/Lottery.sol:64"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MyToken)1327",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:17"
            },
            {
              "label": "callbackGasLimit",
              "offset": 20,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:33"
            },
            {
              "label": "requestConfirmations",
              "offset": 24,
              "slot": "1",
              "type": "t_uint16",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:36"
            },
            {
              "label": "numWords",
              "offset": 26,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:40"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:42"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:43"
            },
            {
              "label": "lotteryId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:45"
            },
            {
              "label": "groupTicket",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(ListNumberTicket)756_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:50"
            },
            {
              "label": "allLottery",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Participants)766_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:56"
            },
            {
              "label": "playerCount",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:58"
            },
            {
              "label": "prizePool",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:59"
            },
            {
              "label": "luckyNumber",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:60"
            },
            {
              "label": "numTicketPlayer",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:61"
            },
            {
              "label": "costTicket",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:62"
            },
            {
              "label": "startAt",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:63"
            },
            {
              "label": "endAt",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:64"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address_payable)dyn_storage": {
              "label": "address payable[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_contract(MyToken)1327": {
              "label": "contract MyToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(ListNumberTicket)756_storage)": {
              "label": "mapping(uint256 => struct Lottery.ListNumberTicket)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Participants)766_storage)": {
              "label": "mapping(uint256 => struct Lottery.Participants)",
              "numberOfBytes": "32"
            },
            "t_struct(ListNumberTicket)756_storage": {
              "label": "struct Lottery.ListNumberTicket",
              "members": [
                {
                  "label": "groupPlayer",
                  "type": "t_array(t_address_payable)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Participants)766_storage": {
              "label": "struct Lottery.Participants",
              "members": [
                {
                  "label": "player",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "numTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "LotteryUpgradable": {
        "src": "contracts/LotteryUpgradable.sol:4",
        "version": {
          "withMetadata": "737662d69274fca654ab4773ecea40f8140803f4e406d0863441395145f35b57",
          "withoutMetadata": "3cf72fbf265b601e4e833d0682ebf9b3d5f7bd68bcb4e475c9d4ae6845eeb978",
          "linkedWithoutMetadata": "3cf72fbf265b601e4e833d0682ebf9b3d5f7bd68bcb4e475c9d4ae6845eeb978"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "delegateCallStartAt(uint256)",
          "delegateCallEndAt(uint256)",
          "delegateCallCostTicket(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LotteryUpgradable",
            "src": "contracts/LotteryUpgradable.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "startAt",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "LotteryUpgradable",
              "src": "contracts/LotteryUpgradable.sol:5"
            },
            {
              "label": "endAt",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "LotteryUpgradable",
              "src": "contracts/LotteryUpgradable.sol:6"
            },
            {
              "label": "costTicket",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "LotteryUpgradable",
              "src": "contracts/LotteryUpgradable.sol:7"
            },
            {
              "label": "callee",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "LotteryUpgradable",
              "src": "contracts/LotteryUpgradable.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyToken": {
        "src": "contracts/MyToken.sol:7",
        "version": {
          "withMetadata": "e2875971304f81bc34bff85af4ab14395af6c533c62dfdc284e7012026cddb35",
          "withoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a",
          "linkedWithoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a"
        },
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setApproval(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyToken",
            "src": "contracts/MyToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts/extensions/ERC20.sol:31",
        "version": {
          "withMetadata": "4c8b67e6276bbe71c1f249cce59684cde3c6b0ff92562577d3d61de7587bcc3e",
          "withoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c",
          "linkedWithoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/extensions/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/extensions/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "contracts/utils/ReentrancyGuardUpgradable.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuardUpgradable.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/utils/ReentrancyGuardUpgradable.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b4cd76c46f252229667db54d569be91a1aadff5dde4c2878439b80406b3842ac",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Lottery": {
        "src": "contracts/Lottery.sol:13",
        "version": {
          "withMetadata": "bbbe439568115943199d510ba75a1b0e8c1b84b31acf12e22166a60761e861e1",
          "withoutMetadata": "152f5a93b762cb0f7a7dfc41fb652a11ddce6eb8bc47d84cc8a90b1f146d871d",
          "linkedWithoutMetadata": "152f5a93b762cb0f7a7dfc41fb652a11ddce6eb8bc47d84cc8a90b1f146d871d"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "setStartAt(uint256)",
          "setEndAt(uint256)",
          "setCostTicket(uint256)",
          "getBalance()",
          "getPlayers(uint256)",
          "getAmountPlayer()",
          "enter(uint256)",
          "_requestRandomWords()",
          "getAmountWinner()",
          "getListWinner(uint256)",
          "getLuckyNumber()",
          "_reset()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/Lottery.sol:30"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/Lottery.sol:33"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/Lottery.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "playerCount",
            "src": "contracts/Lottery.sol:55"
          },
          {
            "kind": "state-variable-assignment",
            "name": "costTicket",
            "src": "contracts/Lottery.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "startAt",
            "src": "contracts/Lottery.sol:60"
          },
          {
            "kind": "state-variable-assignment",
            "name": "endAt",
            "src": "contracts/Lottery.sol:61"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:16"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MyToken)1235",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:17"
            },
            {
              "label": "callbackGasLimit",
              "offset": 20,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:30"
            },
            {
              "label": "requestConfirmations",
              "offset": 24,
              "slot": "1",
              "type": "t_uint16",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:33"
            },
            {
              "label": "numWords",
              "offset": 26,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:37"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:39"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:40"
            },
            {
              "label": "lotteryId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:42"
            },
            {
              "label": "groupTicket",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(ListNumberTicket)756_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:47"
            },
            {
              "label": "allLottery",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Participants)766_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:53"
            },
            {
              "label": "playerCount",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:55"
            },
            {
              "label": "prizePool",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:56"
            },
            {
              "label": "luckyNumber",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:57"
            },
            {
              "label": "numTicketPlayer",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:58"
            },
            {
              "label": "costTicket",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:59"
            },
            {
              "label": "startAt",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:60"
            },
            {
              "label": "endAt",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:61"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address_payable)dyn_storage": {
              "label": "address payable[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_contract(MyToken)1235": {
              "label": "contract MyToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(ListNumberTicket)756_storage)": {
              "label": "mapping(uint256 => struct Lottery.ListNumberTicket)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Participants)766_storage)": {
              "label": "mapping(uint256 => struct Lottery.Participants)",
              "numberOfBytes": "32"
            },
            "t_struct(ListNumberTicket)756_storage": {
              "label": "struct Lottery.ListNumberTicket",
              "members": [
                {
                  "label": "groupPlayer",
                  "type": "t_array(t_address_payable)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Participants)766_storage": {
              "label": "struct Lottery.Participants",
              "members": [
                {
                  "label": "player",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "numTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyToken": {
        "src": "contracts/MyToken.sol:7",
        "version": {
          "withMetadata": "e2875971304f81bc34bff85af4ab14395af6c533c62dfdc284e7012026cddb35",
          "withoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a",
          "linkedWithoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a"
        },
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setApproval(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyToken",
            "src": "contracts/MyToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts/extensions/ERC20.sol:31",
        "version": {
          "withMetadata": "4c8b67e6276bbe71c1f249cce59684cde3c6b0ff92562577d3d61de7587bcc3e",
          "withoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c",
          "linkedWithoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/extensions/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/extensions/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ReentrancyGuard": {
        "src": "contracts/utils/ReentrancyGuardUpgradeable.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/utils/ReentrancyGuardUpgradeable.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/utils/ReentrancyGuardUpgradeable.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b4cd76c46f252229667db54d569be91a1aadff5dde4c2878439b80406b3842ac",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Lottery": {
        "src": "contracts/Lottery.sol:12",
        "version": {
          "withMetadata": "59ddc428162b8a38d3617f0c07a39dd58644aa0e2715d89c6f05365481448059",
          "withoutMetadata": "152f5a93b762cb0f7a7dfc41fb652a11ddce6eb8bc47d84cc8a90b1f146d871d",
          "linkedWithoutMetadata": "152f5a93b762cb0f7a7dfc41fb652a11ddce6eb8bc47d84cc8a90b1f146d871d"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "initialize(address)",
          "setStartAt(uint256)",
          "setEndAt(uint256)",
          "setCostTicket(uint256)",
          "getBalance()",
          "getPlayers(uint256)",
          "getAmountPlayer()",
          "enter(uint256)",
          "_requestRandomWords()",
          "getAmountWinner()",
          "getListWinner(uint256)",
          "getLuckyNumber()",
          "_reset()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/Lottery.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/Lottery.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/Lottery.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "playerCount",
            "src": "contracts/Lottery.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "costTicket",
            "src": "contracts/Lottery.sol:58"
          },
          {
            "kind": "state-variable-assignment",
            "name": "startAt",
            "src": "contracts/Lottery.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "endAt",
            "src": "contracts/Lottery.sol:60"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MyToken)1234",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:16"
            },
            {
              "label": "callbackGasLimit",
              "offset": 20,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:29"
            },
            {
              "label": "requestConfirmations",
              "offset": 24,
              "slot": "1",
              "type": "t_uint16",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:32"
            },
            {
              "label": "numWords",
              "offset": 26,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:36"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:38"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:39"
            },
            {
              "label": "lotteryId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:41"
            },
            {
              "label": "groupTicket",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(ListNumberTicket)755_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:46"
            },
            {
              "label": "allLottery",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Participants)765_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:52"
            },
            {
              "label": "playerCount",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:54"
            },
            {
              "label": "prizePool",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:55"
            },
            {
              "label": "luckyNumber",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:56"
            },
            {
              "label": "numTicketPlayer",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:57"
            },
            {
              "label": "costTicket",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:58"
            },
            {
              "label": "startAt",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:59"
            },
            {
              "label": "endAt",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address_payable)dyn_storage": {
              "label": "address payable[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_contract(MyToken)1234": {
              "label": "contract MyToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(ListNumberTicket)755_storage)": {
              "label": "mapping(uint256 => struct Lottery.ListNumberTicket)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Participants)765_storage)": {
              "label": "mapping(uint256 => struct Lottery.Participants)",
              "numberOfBytes": "32"
            },
            "t_struct(ListNumberTicket)755_storage": {
              "label": "struct Lottery.ListNumberTicket",
              "members": [
                {
                  "label": "groupPlayer",
                  "type": "t_array(t_address_payable)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Participants)765_storage": {
              "label": "struct Lottery.Participants",
              "members": [
                {
                  "label": "player",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "numTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyToken": {
        "src": "contracts/MyToken.sol:7",
        "version": {
          "withMetadata": "e2875971304f81bc34bff85af4ab14395af6c533c62dfdc284e7012026cddb35",
          "withoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a",
          "linkedWithoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a"
        },
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setApproval(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyToken",
            "src": "contracts/MyToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts/extensions/ERC20.sol:31",
        "version": {
          "withMetadata": "4c8b67e6276bbe71c1f249cce59684cde3c6b0ff92562577d3d61de7587bcc3e",
          "withoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c",
          "linkedWithoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/extensions/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/extensions/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20Upgrade": {
        "src": "contracts/upgradeERC20Adress.sol:5",
        "version": {
          "withMetadata": "518338b4bb4f46d13dcf3b2eb34edf6ba092eaac0a7ce47de0ccaad50fa6ab4c",
          "withoutMetadata": "4b09f0281182446d128fe7721b0f6a4672fc798bbefa777aeda44a6e1fb07dc6",
          "linkedWithoutMetadata": "4b09f0281182446d128fe7721b0f6a4672fc798bbefa777aeda44a6e1fb07dc6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(MyToken)1234",
              "contract": "ERC20Upgrade",
              "src": "contracts/upgradeERC20Adress.sol:6"
            }
          ],
          "types": {
            "t_contract(MyToken)1234": {
              "label": "contract MyToken",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Context": {
        "src": "contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "BoxV2": {
        "src": "contracts/BoxV2.sol:4",
        "version": {
          "withMetadata": "4ae0a19e14821cdac5722696814b8e1280adeeef02e7ced56b51a1f145d59b9b",
          "withoutMetadata": "0b9035f36ab2674d2e267652347ba5e2916bb03629a5125c9d8c762132893eab",
          "linkedWithoutMetadata": "0b9035f36ab2674d2e267652347ba5e2916bb03629a5125c9d8c762132893eab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "inc()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "val",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts/BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "Box": {
        "src": "contracts/Box.sol:12",
        "version": {
          "withMetadata": "0849f12c4564684b9a8818aaa268668df3ae7704a9af3d03a6da55f14a8e0445",
          "withoutMetadata": "58a4a4ce6c4d6038902284dfb469539d258f652565aa4fe4905418d82a2958e4",
          "linkedWithoutMetadata": "58a4a4ce6c4d6038902284dfb469539d258f652565aa4fe4905418d82a2958e4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "val",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts/Box.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "VRFConsumerBaseV2": {
        "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:97",
        "inherit": [],
        "libraries": [],
        "methods": [
          "rawFulfillRandomWords(uint256,uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "VRFConsumerBaseV2",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:104"
          },
          {
            "kind": "state-variable-immutable",
            "name": "vrfCoordinator",
            "src": "@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol:99"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "VRFCoordinatorV2Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getRequestConfig()",
          "requestRandomWords(bytes32,uint64,uint16,uint32,uint32)",
          "createSubscription()",
          "getSubscription(uint64)",
          "requestSubscriptionOwnerTransfer(uint64,address)",
          "acceptSubscriptionOwnerTransfer(uint64)",
          "addConsumer(uint64,address)",
          "removeConsumer(uint64,address)",
          "cancelSubscription(uint64,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "ContextUpgradeable",
          "Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "b4cd76c46f252229667db54d569be91a1aadff5dde4c2878439b80406b3842ac",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Box": {
        "src": "contracts/Box.sol:12",
        "version": {
          "withMetadata": "0849f12c4564684b9a8818aaa268668df3ae7704a9af3d03a6da55f14a8e0445",
          "withoutMetadata": "58a4a4ce6c4d6038902284dfb469539d258f652565aa4fe4905418d82a2958e4",
          "linkedWithoutMetadata": "58a4a4ce6c4d6038902284dfb469539d258f652565aa4fe4905418d82a2958e4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "val",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "Box",
              "src": "contracts/Box.sol:13"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "BoxV2": {
        "src": "contracts/BoxV2.sol:4",
        "version": {
          "withMetadata": "4ae0a19e14821cdac5722696814b8e1280adeeef02e7ced56b51a1f145d59b9b",
          "withoutMetadata": "0b9035f36ab2674d2e267652347ba5e2916bb03629a5125c9d8c762132893eab",
          "linkedWithoutMetadata": "0b9035f36ab2674d2e267652347ba5e2916bb03629a5125c9d8c762132893eab"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "inc()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "val",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "BoxV2",
              "src": "contracts/BoxV2.sol:5"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "Lottery": {
        "src": "contracts/Lottery.sol:12",
        "version": {
          "withMetadata": "3fd73faa349f1bbe35a703c8a382328a9ef335052c1aa414fc62a13027dc2ed4",
          "withoutMetadata": "4d7e8d9bd2cb3a8eac19246c2789cdf6cfe1724991efa86fba0d229f07be3b5c",
          "linkedWithoutMetadata": "4d7e8d9bd2cb3a8eac19246c2789cdf6cfe1724991efa86fba0d229f07be3b5c"
        },
        "inherit": [
          "VRFConsumerBaseV2"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "setStartAt(uint256)",
          "setEndAt(uint256)",
          "setCostTicket(uint256)",
          "getBalance()",
          "getPlayers(uint256)",
          "getAmountPlayer()",
          "enter(uint256)",
          "_requestRandomWords()",
          "getAmountWinner()",
          "getListWinner(uint256)",
          "getLuckyNumber()",
          "_reset()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Lottery",
            "src": "contracts/Lottery.sol:17"
          },
          {
            "kind": "state-variable-assignment",
            "name": "callbackGasLimit",
            "src": "contracts/Lottery.sol:29"
          },
          {
            "kind": "state-variable-assignment",
            "name": "requestConfirmations",
            "src": "contracts/Lottery.sol:32"
          },
          {
            "kind": "state-variable-assignment",
            "name": "numWords",
            "src": "contracts/Lottery.sol:36"
          },
          {
            "kind": "state-variable-assignment",
            "name": "playerCount",
            "src": "contracts/Lottery.sol:54"
          },
          {
            "kind": "state-variable-assignment",
            "name": "costTicket",
            "src": "contracts/Lottery.sol:58"
          },
          {
            "kind": "state-variable-assignment",
            "name": "startAt",
            "src": "contracts/Lottery.sol:59"
          },
          {
            "kind": "state-variable-assignment",
            "name": "endAt",
            "src": "contracts/Lottery.sol:60"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:15"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(MyToken)1354",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:16"
            },
            {
              "label": "callbackGasLimit",
              "offset": 20,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:29"
            },
            {
              "label": "requestConfirmations",
              "offset": 24,
              "slot": "1",
              "type": "t_uint16",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:32"
            },
            {
              "label": "numWords",
              "offset": 26,
              "slot": "1",
              "type": "t_uint32",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:36"
            },
            {
              "label": "s_randomWords",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:38"
            },
            {
              "label": "s_requestId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:39"
            },
            {
              "label": "lotteryId",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:41"
            },
            {
              "label": "groupTicket",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_struct(ListNumberTicket)783_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:46"
            },
            {
              "label": "allLottery",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_struct(Participants)793_storage)",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:52"
            },
            {
              "label": "playerCount",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:54"
            },
            {
              "label": "prizePool",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:55"
            },
            {
              "label": "luckyNumber",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:56"
            },
            {
              "label": "numTicketPlayer",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:57"
            },
            {
              "label": "costTicket",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:58"
            },
            {
              "label": "startAt",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:59"
            },
            {
              "label": "endAt",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "Lottery",
              "src": "contracts/Lottery.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address_payable)dyn_storage": {
              "label": "address payable[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_contract(MyToken)1354": {
              "label": "contract MyToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(ListNumberTicket)783_storage)": {
              "label": "mapping(uint256 => struct Lottery.ListNumberTicket)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Participants)793_storage)": {
              "label": "mapping(uint256 => struct Lottery.Participants)",
              "numberOfBytes": "32"
            },
            "t_struct(ListNumberTicket)783_storage": {
              "label": "struct Lottery.ListNumberTicket",
              "members": [
                {
                  "label": "groupPlayer",
                  "type": "t_array(t_address_payable)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Participants)793_storage": {
              "label": "struct Lottery.Participants",
              "members": [
                {
                  "label": "player",
                  "type": "t_address_payable",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "numTicket",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "LotteryUpgradeable": {
        "src": "contracts/LotteryUpgradeable.sol:4",
        "version": {
          "withMetadata": "d5288b918ff7222bf6c6f91c47e8e33851e8692601683ba43bc6e60eb9642db4",
          "withoutMetadata": "3cf72fbf265b601e4e833d0682ebf9b3d5f7bd68bcb4e475c9d4ae6845eeb978",
          "linkedWithoutMetadata": "3cf72fbf265b601e4e833d0682ebf9b3d5f7bd68bcb4e475c9d4ae6845eeb978"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "delegateCallStartAt(uint256)",
          "delegateCallEndAt(uint256)",
          "delegateCallCostTicket(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "LotteryUpgradeable",
            "src": "contracts/LotteryUpgradeable.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "startAt",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "LotteryUpgradeable",
              "src": "contracts/LotteryUpgradeable.sol:5"
            },
            {
              "label": "endAt",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "LotteryUpgradeable",
              "src": "contracts/LotteryUpgradeable.sol:6"
            },
            {
              "label": "costTicket",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "LotteryUpgradeable",
              "src": "contracts/LotteryUpgradeable.sol:7"
            },
            {
              "label": "callee",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "LotteryUpgradeable",
              "src": "contracts/LotteryUpgradeable.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "MyToken": {
        "src": "contracts/MyToken.sol:7",
        "version": {
          "withMetadata": "e2875971304f81bc34bff85af4ab14395af6c533c62dfdc284e7012026cddb35",
          "withoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a",
          "linkedWithoutMetadata": "16f5111901f7c6553b3253a1704c62971fd26990ec6d23a36b5142220384ae7a"
        },
        "inherit": [
          "ERC20",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "setApproval(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MyToken",
            "src": "contracts/MyToken.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "ERC20": {
        "src": "contracts/extensions/ERC20.sol:31",
        "version": {
          "withMetadata": "4c8b67e6276bbe71c1f249cce59684cde3c6b0ff92562577d3d61de7587bcc3e",
          "withoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c",
          "linkedWithoutMetadata": "27cd5ae85982d21f11ad309a9b98acda31e08fb6d0f29b4f071765f78051254c"
        },
        "inherit": [
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "contracts/extensions/ERC20.sol:50"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:32"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:34"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:36"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:38"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/extensions/ERC20.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "contracts/extensions/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Ownable": {
        "src": "contracts/utils/Ownable.sol:18",
        "inherit": [
          "Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/utils/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/utils/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SafeMath": {
        "src": "contracts/utils/SafeMath.sol:4",
        "version": {
          "withMetadata": "44b0fe0a61d156a15bcdd249b3f5797f750fa4c19d5db51388ef73d23d2b3bf5",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}